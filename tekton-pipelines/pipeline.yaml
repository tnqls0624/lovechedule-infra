apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clone-read
  namespace: lovechedule
spec:
  params:
    - name: repo-url
      type: string
    - name: image-reference
      type: string
    - name: kubectl-args
      type: array
      default: [ ]

  workspaces:
    - name: shared-data
    - name: docker-credentials
  tasks:
    - name: fetch-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: $(params.repo-url)

    - name: check-dockerfile
      runAfter: ["fetch-source"]
      taskSpec:
        workspaces:
          - name: source
        steps:
          - name: list-files
            image: alpine:latest
            script: |
              echo "Listing files in workspace..."
              ls -R $(workspaces.source.path) # 모든 파일 나열
              if [ -f "$(workspaces.source.path)/Dockerfile" ]; then
                echo "Dockerfile found at $(workspaces.source.path)/Dockerfile"
              else
                echo "Dockerfile not found in expected location."
                exit 1
              fi
      workspaces:
        - name: source
          workspace: shared-data

    - name: build-push
      runAfter: ["check-dockerfile"]
      taskRef:
        name: kaniko
      workspaces:
        - name: source
          workspace: shared-data
        - name: dockerconfig
          workspace: docker-credentials
      params:
        - name: IMAGE
          value: $(params.image-reference)
        - name: DOCKERFILE
          value: Dockerfile # Dockerfile의 위치를 명확히 지정
        - name: CONTEXT
          value: . # 빌드 컨텍스트 경로

            #   - name: deploy
            #runAfter: ["build-push"]
            #taskRef:
            #name: kubernetes-actions
            # workspaces:
            # - name: manifest-dir
            #workspace: shared-data
            #params:
            #- name: args
            #value: $(params.kubectl-args[*])

